package google;
import java.util.*;

public class kCloestSlots {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		int[] flowers = {2,1,4,3};
		int k = 1;
		
		int res = findKClosetSlots(flowers, k);
		
		System.out.println("res: " + res);
		
	}
	
	public static int findKClosetSlots(int[] flowers, int k) {
		
		int n = flowers.length;
		int[] bloom = new int[n + 1];
		int[] left = new int[n + 1];
		int[] right = new int[n + 1];
		
		for (int i = 0; i < n; i++) {
			int pos = flowers[i];
			System.out.println(pos);
			
			if (left[pos] == 1 || right[pos] == 1) {
				return i + 1;
			}
			
			bloom[pos] = 1;
			boolean leftCheck = true;
            boolean rightCheck = true;
            for (int m = 1; m <= k; m++) {
                if (rightCheck && pos + m < n && bloom[pos + m] != 0) {
                    rightCheck = false;
                }
                if (leftCheck && pos - m > 0 && bloom[pos - m] != 0) {
                    leftCheck = false;
                }
            }
            
			for (int j = 1; j <= k; j++) {
				if (pos + j <= n && right[pos + j] != -1) {
					right[pos + j] = -1;
				}
				else {
					rightCheck = false;
					break;
				}
			}
			
			for (int j = 1; j <= k; j++) {
				if (pos - j > 0 && left[pos - j] != -1) {
					left[pos - j] = -1;
				}
				else {
					leftCheck = false;
					break;
				}
			}
			
			
			if (pos + k + 1 <= n && right[pos + k + 1] != -1) {
				right[pos + k + 1] = 1;
			}
			if (pos - k - 1 > 0 && left[pos - k - 1] != -1) {
				left[pos - k - 1] = 1;
			}
			
			display(bloom);
			display(left);
			display(right);
			
		}
		
		return -1;
		
		
	}
	
	public static void display(int[] arr) {
		for (int i = 0; i < arr.length; i++) {
			System.out.print("\t" + arr[i] + "\t|");
		}
		System.out.println();
	}

}

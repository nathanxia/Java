class Ticket3 implements Runnable {
	
	private int tick = 1000;
	Object obj = new Object(); //上帝
	boolean flag = true;
	public void run() {
		if (flag) {
			while (true) {
				synchronized(this) {
					if (tick <= 0) break;
					try {
						Thread.sleep(10);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
					
					System.out.println(Thread.currentThread().getName() + 
							" sell ticket, remianing: " + tick--);
				}
			}
		}
		else {
			while (true) {
				show();
			}
		}
	}
	
	public synchronized void show() {
		if (tick <= 0) return;
		// 强制sleep，线程就会产生错误票数。
		try {
			Thread.sleep(10);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		System.out.println(Thread.currentThread().getName() + 
				" show ticket, remianing: " + tick--);
	}
}


public class L07_StaticMethodDemo {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Ticket3 t = new Ticket3();
		
		Thread t1 = new Thread(t);
		Thread t2 = new Thread(t);
		//Thread t3 = new Thread(t);
		//Thread t4 = new Thread(t);
		
		t1.start();
		try {
			Thread.sleep(10);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		t.flag = false;
		t2.start();
		//t3.start();
		//t4.start();
		
		
		
	}

}

package Amazon;
import java.util.*;
public class smallestDistance {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String[] tagList = {"made", "weather", "forecast", "says", "that", "made", "rain", "in", "spain", "stays"};
		String[] targetList = {"made", "in", "spain"};
		
		//String[] tagList = {"dbc", "2abc", "cab", "bcd", "bcb"};
		//String[] targetList = {"2abc", "bcd", "cab"};
		
		int[] res = findSmallestDistance(tagList, targetList);
		
		System.out.println(res[0] + " : " + res[1]);
	}
	
	public static int[] findSmallestDistance(String[] tagList, String[] targetList) {
		
		Map<String, Integer> map = new HashMap<>();
		
		for (String s : targetList) {
			map.put(s, 0);
		}
		
		int count = 0;
		int minLen = tagList.length + 2;
		int[] res = new int[2];
		
		int l = 0;
		for (l = 0;  l < tagList.length; l++) {
			if (map.containsKey(tagList[l])) {
				break;
			}
		}
		
		if (l == tagList.length - 1) return new int[1];
		
		for (int r = l; r < tagList.length; r++) {
			if (map.containsKey(tagList[r])) {
				map.put(tagList[r], map.get(tagList[r]) + 1);
				
				if (map.get(tagList[r]) == 1) count++;
			}
			
			if (count == targetList.length) {
				System.out.println(l + " - " + r);
				if (r - l < minLen) {
					minLen = r - l;
					res[0] = l;
					res[1] = r;
				}
				
				map.put(tagList[l], map.get(tagList[l]) - 1);
				l++;
				while (true) {
					if (map.containsKey(tagList[l])) {
						map.put(tagList[l], map.get(tagList[l]) - 1);
						if (map.get(tagList[l]) == 1) break;
					}
					l++;
				}
				count--;
			}
			
		}
		
		
		return res;
		
	}

}
